{"metadata":"{\"defaultCompiler\":{\"version\":\"0.8.18\"},\"sources\":{\"contracts/core/DNSKeys.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.18;\\n\\nimport \\\"./dep/Ownable.sol\\\";\\n\\n/**\\n * @title DNSKeys\\n * @notice DNSKeys contract which stores the hash of the DNS keys used to sign Venmo emails.\\n * @dev The contract is owned by a timelock contract. It is responsible for storing he DNS keys \\n * used to sign Venmo emails and the hash of the keys. This contract is used to store 1024 bit keys.\\n */\\ncontract DNSKeys is Ownable {\\n\\n    /**\\n     * @dev Emitted when the Venmo key is set. We build this contract for 1024 but keys.\\n     */\\n    event SetVenmoKey(bytes1[128] key);\\n\\n    /**\\n     * @dev Emitted when the Amazonses key is set. We build this contract for 1024 but keys.\\n     */\\n    event SetSesKey(bytes1[128] key);\\n\\n    /**\\n     * @dev Emitted when the hash is set.\\n     */\\n    event SetHash(bytes32 hashVal);\\n\\n    /** \\n     * @notice venmoKey - a bytes array containing the RSA public key of Venmo.\\n     * @dev The key is used to sign emails originating from venmo.com when a user completes a payment. \\n     * The key is 1024 bits long. This key is used to verify that the email originated from Venmo.\\n     */\\n    bytes1[128] public venmoKey;\\n\\n    /** \\n     * @notice sesKey - a bytes array containing the RSA public key of Amazonses.\\n     * @dev The key used to sign emails originating Amazonses sent by Venmo. The key is 1024 bits long. \\n     * Venmo uses Amazonses as their email provider. We verify the signature as additional protection \\n     * against Venmo leaking their key or an employee gaining access to the Venmo key. \\n     */\\n    bytes1[128] public sesKey;\\n\\n    /** \\n     * @notice hashValue - a bytes32 which stores the hash of the vennmo key concatenated with the ses key. \\n     * @dev The hash is intended to be checked by a Verifier contract against a hash outputted by a ZK proof.\\n     */\\n    bytes32 public hashValue;\\n\\n    /**\\n     * @notice DNSKeys constructor - sets the owner of the contract to a timelock contract.\\n     */\\n    constructor(address _initialOwner) {\\n        transferOwnership(_initialOwner);\\n    }\\n\\n    /**\\n     * @notice setVenmoKey - sets the venmoKey variable.\\n     * @param key - a bytes array containing the RSA public key of Venmo.\\n     * @dev The key is used to sign emails originating from venmo.com when a user completes a payment. \\n     * This function is permissioned to the timelock contract.\\n     */\\n    function setVenmoKey(bytes1[128] memory key) external onlyOwner {\\n        require(uint8(key[0]) > 63, \\\"venmo key is less than 1022 bits\\\");\\n        uint8 allEqual = 1;\\n        for (uint index = 0; index < 128; index++) {\\n            if (key[index] != sesKey[index]) {\\n                allEqual = 0;\\n            }\\n        }\\n        require(allEqual == 0, \\\"venmo key is equal to ses key\\\");\\n\\n        venmoKey = key;\\n        emit SetVenmoKey(key);\\n    }\\n\\n    /**\\n     * @notice setSesKey - sets the sesKey variable.\\n     * @param key - a uint array containing the RSA public key of Amazonses.\\n     * @dev The key used to sign emails originating Amazonses sent by Venmo. Venmo uses Amazonses as their\\n     * email provider. This function is permissioned to the timelock contract. Key is arranged so that \\n     *   key[0] is the most significant byte.\\n     */\\n    function setSesKey(bytes1[128] memory key) external onlyOwner {\\n        require(uint8(key[0]) > 63, \\\"ses key is 1022 bits or less\\\");\\n        uint8 allEqual = 1;\\n        for (uint index = 0; index < 128; index++) {\\n            if (key[index] != venmoKey[index]) {\\n                allEqual = 0;\\n            }\\n        }\\n        require(allEqual == 0, \\\"ses key is equal to venmo key\\\");\\n\\n        sesKey = key;\\n        emit SetSesKey(key);\\n    }\\n    \\n    /**\\n     * @notice setHash - sets the hashValue variable by calling calculateHash.\\n     * @dev This function is external so that it can be called by anyone.\\n     */\\n    function setHash() external {\\n        bytes32 hashVal = calculateHash();\\n        hashValue = hashVal;\\n        emit SetHash(hashVal);\\n    }\\n\\n    /**\\n     * @notice calculateHash - calculates the hash of the venmoKey concatenated with the sesKey.\\n     * @return hashVal - the hash of the venmoKey concatenated with the sesKey.\\n     * @dev This function is public so that it can be called by anyone. It loads the venmoKey and sesKey\\n     * into memory and then concatenates them. It then calculates the hash of the concatenated bytes array\\n     * using the standard sha256 Solidity function.\\n     */\\n    function calculateHash() public view returns (bytes32 hashVal) {\\n        \\n        // Create a new bytes array of size 2048 bits to store the concatenated keys\\n        bytes memory result = new bytes(256);\\n\\n        // Copy the venmoKey into the first 4 elements of the concatenate array\\n        for (uint256 i = 0; i < 128; i++) {\\n            result[i] = venmoKey[i];\\n        }\\n\\n        // Copy the sesKey into the last 4 elements of the concatenate array\\n        for (uint256 i = 0; i < 128; i++) {\\n            result[i + 128] = sesKey[i];\\n        }\\n\\n        // Return the hash of the concatenated keys by calling the sha256 Solidity function.\\n        return sha256(result);\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.18\"},\"contracts/core/dep/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.18;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.18\"},\"contracts/core/dep/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.18\"}}}","address":"0x588776F93a1774a41E0e95e92F55b72E28366715","bytecode":"0x60806040523480156200001157600080fd5b506040516200177a3803806200177a8339818101604052810190620000379190620002f5565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200013b60201b60201c565b5062000442565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200014b620001d160201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001bd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001b490620003ae565b60405180910390fd5b620001ce816200007760201b60201c565b50565b620001e16200006f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002076200026260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000260576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002579062000420565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002bd8262000290565b9050919050565b620002cf81620002b0565b8114620002db57600080fd5b50565b600081519050620002ef81620002c4565b92915050565b6000602082840312156200030e576200030d6200028b565b5b60006200031e84828501620002de565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006200039660268362000327565b9150620003a38262000338565b604082019050919050565b60006020820190508181036000830152620003c98162000387565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200040860208362000327565b91506200041582620003d0565b602082019050919050565b600060208201905081810360008301526200043b81620003f9565b9050919050565b61132880620004526000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637869a72f116100665780637869a72f146101355780638da5cb5b1461013f5780639df2c1e61461015d578063e300f0dc14610179578063f2fde38b146101a95761009e565b80630193bf6e146100a35780630b22175a146100bf5780632b92b8e5146100ef578063400861581461010d578063715018a61461012b575b600080fd5b6100bd60048036038101906100b89190610c0d565b6101c5565b005b6100d960048036038101906100d49190610c71565b610377565b6040516100e69190610cad565b60405180910390f35b6100f76103a1565b6040516101049190610ce1565b60405180910390f35b6101156103a7565b6040516101229190610ce1565b60405180910390f35b610133610575565b005b61013d610589565b005b6101476105d6565b6040516101549190610d3d565b60405180910390f35b61017760048036038101906101729190610c0d565b6105ff565b005b610193600480360381019061018e9190610c71565b6107b1565b6040516101a09190610cad565b60405180910390f35b6101c360048036038101906101be9190610d84565b6107db565b005b6101cd61085e565b603f816000608081106101e3576101e2610db1565b5b602002015160f81c60ff161161022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022590610e3d565b60405180910390fd5b60006001905060005b60808110156102e3576001816080811061025457610253610db1565b5b602091828204019190069054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191683826080811061029f5761029e610db1565b5b60200201517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146102d057600091505b80806102db90610e8c565b915050610237565b5060008160ff161461032a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032190610f20565b60405180910390fd5b81600590608061033b9291906109a8565b507fc17d4766950faa168e5082675440ac78a10edcd27845c5ed2143aeef3433550a8260405161036b9190610feb565b60405180910390a15050565b6005816080811061038757600080fd5b60209182820401919006915054906101000a900460f81b81565b60095481565b60008061010067ffffffffffffffff8111156103c6576103c5610a84565b5b6040519080825280601f01601f1916602001820160405280156103f85781602001600182028036833780820191505090505b50905060005b6080811015610486576001816080811061041b5761041a610db1565b5b602091828204019190069054906101000a900460f81b82828151811061044457610443610db1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061047e90610e8c565b9150506103fe565b5060005b608081101561051e57600581608081106104a7576104a6610db1565b5b602091828204019190069054906101000a900460f81b826080836104cb9190611007565b815181106104dc576104db610db1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061051690610e8c565b91505061048a565b5060028160405161052f91906110ac565b602060405180830381855afa15801561054c573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061056f91906110ef565b91505090565b61057d61085e565b61058760006108dc565b565b60006105936103a7565b9050806009819055507fce29006ad1ea2957978fa8df0d334fa5c69460064ce0f578b25334fd3aec286b816040516105cb9190610ce1565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61060761085e565b603f8160006080811061061d5761061c610db1565b5b602002015160f81c60ff1611610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f90611168565b60405180910390fd5b60006001905060005b608081101561071d576005816080811061068e5761068d610db1565b5b602091828204019190069054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382608081106106d9576106d8610db1565b5b60200201517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461070a57600091505b808061071590610e8c565b915050610671565b5060008160ff1614610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b906111d4565b60405180910390fd5b8160019060806107759291906109a8565b507f7860f1081eea5a148c1b3bf7b219888537c99c2e10d1a941317893ddbfd0643f826040516107a59190610feb565b60405180910390a15050565b600181608081106107c157600080fd5b60209182820401919006915054906101000a900460f81b81565b6107e361085e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084990611266565b60405180910390fd5b61085b816108dc565b50565b6108666109a0565b73ffffffffffffffffffffffffffffffffffffffff166108846105d6565b73ffffffffffffffffffffffffffffffffffffffff16146108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d1906112d2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b826080601f01602090048101928215610a315791602002820160005b83821115610a0257835183826101000a81548160ff021916908360f81c021790555092602001926001016020816000010492830192600103026109c4565b8015610a2f5782816101000a81549060ff0219169055600101602081600001049283019260010302610a02565b505b509050610a3e9190610a42565b5090565b5b80821115610a5b576000816000905550600101610a43565b5090565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610abc82610a73565b810181811067ffffffffffffffff82111715610adb57610ada610a84565b5b80604052505050565b6000610aee610a5f565b9050610afa8282610ab3565b919050565b600067ffffffffffffffff821115610b1a57610b19610a84565b5b602082029050919050565b600080fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b610b5f81610b2a565b8114610b6a57600080fd5b50565b600081359050610b7c81610b56565b92915050565b6000610b95610b9084610aff565b610ae4565b90508060208402830185811115610baf57610bae610b25565b5b835b81811015610bd85780610bc48882610b6d565b845260208401935050602081019050610bb1565b5050509392505050565b600082601f830112610bf757610bf6610a6e565b5b6080610c04848285610b82565b91505092915050565b60006110008284031215610c2457610c23610a69565b5b6000610c3284828501610be2565b91505092915050565b6000819050919050565b610c4e81610c3b565b8114610c5957600080fd5b50565b600081359050610c6b81610c45565b92915050565b600060208284031215610c8757610c86610a69565b5b6000610c9584828501610c5c565b91505092915050565b610ca781610b2a565b82525050565b6000602082019050610cc26000830184610c9e565b92915050565b6000819050919050565b610cdb81610cc8565b82525050565b6000602082019050610cf66000830184610cd2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2782610cfc565b9050919050565b610d3781610d1c565b82525050565b6000602082019050610d526000830184610d2e565b92915050565b610d6181610d1c565b8114610d6c57600080fd5b50565b600081359050610d7e81610d58565b92915050565b600060208284031215610d9a57610d99610a69565b5b6000610da884828501610d6f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f736573206b657920697320313032322062697473206f72206c65737300000000600082015250565b6000610e27601c83610de0565b9150610e3282610df1565b602082019050919050565b60006020820190508181036000830152610e5681610e1a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e9782610c3b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ec957610ec8610e5d565b5b600182019050919050565b7f736573206b657920697320657175616c20746f2076656e6d6f206b6579000000600082015250565b6000610f0a601d83610de0565b9150610f1582610ed4565b602082019050919050565b60006020820190508181036000830152610f3981610efd565b9050919050565b600060809050919050565b600081905092915050565b6000819050919050565b610f6981610b2a565b82525050565b6000610f7b8383610f60565b60208301905092915050565b6000602082019050919050565b610f9d81610f40565b610fa78184610f4b565b9250610fb282610f56565b8060005b83811015610fe3578151610fca8782610f6f565b9650610fd583610f87565b925050600181019050610fb6565b505050505050565b6000611000820190506110016000830184610f94565b92915050565b600061101282610c3b565b915061101d83610c3b565b925082820190508082111561103557611034610e5d565b5b92915050565b600081519050919050565b600081905092915050565b60005b8381101561106f578082015181840152602081019050611054565b60008484015250505050565b60006110868261103b565b6110908185611046565b93506110a0818560208601611051565b80840191505092915050565b60006110b8828461107b565b915081905092915050565b6110cc81610cc8565b81146110d757600080fd5b50565b6000815190506110e9816110c3565b92915050565b60006020828403121561110557611104610a69565b5b6000611113848285016110da565b91505092915050565b7f76656e6d6f206b6579206973206c657373207468616e20313032322062697473600082015250565b6000611152602083610de0565b915061115d8261111c565b602082019050919050565b6000602082019050818103600083015261118181611145565b9050919050565b7f76656e6d6f206b657920697320657175616c20746f20736573206b6579000000600082015250565b60006111be601d83610de0565b91506111c982611188565b602082019050919050565b600060208201905081810360008301526111ed816111b1565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611250602683610de0565b915061125b826111f4565b604082019050919050565b6000602082019050818103600083015261127f81611243565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112bc602083610de0565b91506112c782611286565b602082019050919050565b600060208201905081810360008301526112eb816112af565b905091905056fea26469706673582212206cf2122a880c27bd4161037604a0ad66a319a10da17df45be4af89c3fd99cbc664736f6c63430008120033","deployedBytecode":"","abi":[{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"hashVal","type":"bytes32"}],"name":"SetHash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes1[128]","name":"key","type":"bytes1[128]"}],"name":"SetSesKey","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes1[128]","name":"key","type":"bytes1[128]"}],"name":"SetVenmoKey","type":"event"},{"inputs":[],"name":"calculateHash","outputs":[{"internalType":"bytes32","name":"hashVal","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hashValue","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"sesKey","outputs":[{"internalType":"bytes1","name":"","type":"bytes1"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"setHash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes1[128]","name":"key","type":"bytes1[128]"}],"name":"setSesKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes1[128]","name":"key","type":"bytes1[128]"}],"name":"setVenmoKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"venmoKey","outputs":[{"internalType":"bytes1","name":"","type":"bytes1"}],"stateMutability":"view","type":"function"}]}